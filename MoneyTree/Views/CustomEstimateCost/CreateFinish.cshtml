@model MoneyTree.Models.ViewModels.CustomEstimateCostCreateViewModel

@{
    ViewData["Title"] = "Create";
}

<style type="text/css">

    .project_cost_create_row {
        display: flex;
        flex-direction: row;
    }

    .project_cost_create_field {
        padding-right: 15px
    }

    .updated_quantity {
        text-emphasis-color: darkgreen;
        font-weight: bold
    }
</style>

<script src="~/lib/jquery/dist/jquery.min.js"
        asp-fallback-test="window.jQuery"
        crossorigin="anonymous"></script>

<div class="page_title_container container-fluid">
    <h1 class="page_title">Results of Adding Estimate Costs</h1>
</div>

<hr />

@if (Model.UpdatedRecords.Count > 0) {

    <h3>Updated Records</h3>
    <h6>The following records already existed.  The records were updated to reflect the additional quantity you entered.</h6>

    foreach (var item in Model.UpdatedRecords) {

        <card class="card text-center mb-4" style="padding: 5px; width: 40%">
            <dl class="row">
                <dt class="col-sm">
                    Item:
                </dt>
                <dd class="col-sm">
                    @Html.DisplayFor(model => item.ItemName)
                </dd>
            </dl>
            <dl class="row">
                <dt class="col-sm updated_quantity">
                    Updated Quantity:
                </dt>
                <dd class="col-sm updated_quantity">
                    @Html.DisplayFor(model => item.Quantity)
                </dd>
             </dl>
            <dl class="row">
                <dt class="col-sm">
                    Cost:
                </dt>
                <dd class="col-sm">
                    @Html.DisplayFor(model => item.UnitOfMeasure)
                </dd>
            </dl>
            <dl class="row">
                <dt class="col-sm">
                    Cost:
                </dt>
                <dd class="col-sm">
                    $@Html.DisplayFor(model => item.CostPerUnit)
                </dd>
            </dl>

            @if (Model.RejectedEntries.Count == 0){
                <div>
                    <a asp-action="Details" asp-controller="Estimate" asp-route-id="@Model.EstimateId">
                    <button class="btn btn-dark" type="button">Back to Estimate Details</button></a>
                </div>
            }
        </card>
    }
}

@if (Model.RejectedEntries.Count > 0){

    <h3>Rejected Records</h3>
    <h6>The following records were rejected.  Please correct the records to ensure the Item Name and Units fields are filled in and the Quantity, Cost Per Unit and Markup Percent Fields are greater than 0.</h6>
    <card class="card text-center mb-4">
        <form asp-action="Create" class="" style="width: 100%">
            <div id="pc_form" class="project_cost_create_form">
                @for (int i = 0; i < Model.RejectedEntries.Count; i++){

                <div class="project_cost_create_row" id="pc_form_row_@i">
                    <div class="form-group" id="custom_estimateId_div_@i" style="width: 0%">
                        <input type="hidden" asp-for="RejectedEntries[i].EstimateId" class="form-control" id="custom_estimateId_input_@i" />
                    </div>
                    <div class="form-group" id="custom_category_div_@i" style="width: 0%">
                        <input type="hidden" asp-for="RejectedEntries[i].Category" class="form-control" id="custom_category_input_@i" />
                    </div>
                    <div class="form-group custom_cost_create_field" id="custom_item_div_@i" style="width: 35%">
                        <label asp-for="RejectedEntries[i].ItemName" class="control-label"></label>
                        <input asp-for="RejectedEntries[i].ItemName" class="form-control" id="custom_item_input_@i" />
                    </div>
                    <div class="form-group custom_cost_create_field" id="custom_unit_div_@i" style="width: 20%">
                        <label asp-for="RejectedEntries[i].UnitOfMeasure" class="control-label"></label>
                        <input asp-for="RejectedEntries[i].UnitOfMeasure" class="form-control" id="custom_unit_input_@i" />
                    </div>
                    <div class="form-group custom_cost_create_field" id="custom_cpu_div_@i" style="width: 30%">
                        <label asp-for="RejectedEntries[i].CostPerUnit" class="control-label"></label>
                        <input asp-for="RejectedEntries[i].CostPerUnit" class="form-control" id="custom_cpu_input_@i" />
                    </div>
                    <div class="form-group custom_cost_create_field" id="custom_quantity_div_@i" style="width: 10%">
                        <label asp-for="RejectedEntries[i].Quantity" class="control-label"></label>
                        <input asp-for="RejectedEntries[i].Quantity" class="form-control" id="custom_quantity_input_@i" />
                    </div>
                    <div class="form-group custom_cost_create_field" id="custom_markup_div_@i" style="width: 25%">
                        <label asp-for="RejectedEntries[i].MarkupPercent" class="control-label"></label>
                        <input asp-for="RejectedEntries[i].MarkupPercent" class="form-control" id="custom_markup_input_@i" />
                    </div>
                </div>
                }
            </div>
            <div>
                <input type="submit" value="Submit" class="btn btn-dark" />
            </div>
        </form>
    </card>
}